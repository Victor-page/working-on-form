{"version":3,"sources":["hooks/use-input.js","components/BasicForm.js","App.js","index.js"],"names":["initialInputState","value","isTouched","inputStateReducer","prevState","action","type","useInput","validateValue","useReducer","inputState","dispatch","valueIsValid","hasError","isValid","valueChangeHandler","target","inputBlurHandler","reset","isBlank","trim","validateEmail","email","test","String","toLowerCase","BasicForm","props","firstNameValue","isFirstNameValid","hasFirstNameError","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","lastNameValue","isLastNameValid","hasLastNameError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","emailValue","isEmailValid","hasEmailError","emailChangeHandler","emailBlurHandler","resetEmail","isFormValid","formControlClasses","firstNameClasses","lastNameClasses","emailClasses","onSubmit","event","preventDefault","console","log","className","htmlFor","id","onChange","onBlur","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"mLAEMA,EAAoB,CACxBC,MAAO,GACPC,WAAW,GAGPC,EAAoB,SAACC,EAAWC,GACpC,MAAoB,UAAhBA,EAAOC,KACF,CAAEL,MAAOI,EAAOJ,MAAOC,UAAWE,EAAUF,WAEjC,SAAhBG,EAAOC,KACF,CAAEJ,WAAW,EAAMD,MAAOG,EAAUH,OAEzB,UAAhBI,EAAOC,KACF,CAAEJ,WAAW,EAAOD,MAAO,IAE7BD,GA6BMO,EA1BE,SAACC,GAChB,MAA+BC,qBAC7BN,EACAH,GAFF,mBAAOU,EAAP,KAAmBC,EAAnB,KAKMC,EAAeJ,EAAcE,EAAWT,OACxCY,GAAYD,GAAgBF,EAAWR,UAS7C,MAAO,CACLD,MAAOS,EAAWT,MAClBa,QAASF,EACTC,WACAE,mBAXyB,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzBL,EAAS,CAAEL,KAAM,QAASL,MAAOe,EAAOf,SAWxCgB,iBATuB,kBAAMN,EAAS,CAAEL,KAAM,UAU9CY,MARY,kBAAMP,EAAS,CAAEL,KAAM,a,OChCjCa,EAAU,SAAClB,GAAD,MAA4B,KAAjBA,EAAMmB,QAE3BC,EAAgB,SAACC,GAGrB,MADE,wJACQC,KAAKC,OAAOF,GAAOG,gBA6GhBC,EA1GG,SAACC,GACjB,MAOIpB,EAASY,GANJS,EADT,EACE3B,MACS4B,EAFX,EAEEf,QACUgB,EAHZ,EAGEjB,SACoBkB,EAJtB,EAIEhB,mBACkBiB,EALpB,EAKEf,iBACOgB,EANT,EAMEf,MAGF,EAOIX,EAASY,GANJe,EADT,EACEjC,MACSkC,EAFX,EAEErB,QACUsB,EAHZ,EAGEvB,SACoBwB,EAJtB,EAIEtB,mBACkBuB,EALpB,EAKErB,iBACOsB,EANT,EAMErB,MAGF,EAOIX,EAASc,GANJmB,EADT,EACEvC,MACSwC,EAFX,EAEE3B,QACU4B,EAHZ,EAGE7B,SACoB8B,EAJtB,EAIE5B,mBACkB6B,EALpB,EAKE3B,iBACO4B,EANT,EAME3B,MAGI4B,KACJjB,GAAoBM,GAAmBM,GAoBnCM,EAAqB,SAAClC,GAAD,OACzBA,EAAW,uBAAyB,gBAEhCmC,EAAmBD,EAAmBjB,GAEtCmB,EAAkBF,EAAmBX,GAErCc,EAAeH,EAAmBL,GAExC,OACE,uBAAMS,SAtBc,SAACC,GACrBA,EAAMC,iBAEDP,IAILQ,QAAQC,IAAI,CAAE3B,iBAAgBM,gBAAeM,eAZ7CP,IACAM,IACAM,MAyBA,UACE,sBAAKW,UAAU,gBAAf,UACE,sBAAKA,UAAWR,EAAhB,UACE,uBAAOS,QAAQ,OAAf,wBACA,uBACEnD,KAAK,OACLoD,GAAG,OACHzD,MAAO2B,EACP+B,SAAU5B,EACV6B,OAAQ5B,IAETF,GACC,mBAAG0B,UAAU,aAAb,yCAGJ,sBAAKA,UAAWP,EAAhB,UACE,uBAAOQ,QAAQ,OAAf,uBACA,uBACEnD,KAAK,OACLoD,GAAG,OACHzD,MAAOiC,EACPyB,SAAUtB,EACVuB,OAAQtB,IAETF,GACC,mBAAGoB,UAAU,aAAb,2CAIN,sBAAKA,UAAWN,EAAhB,UACE,uBAAOO,QAAQ,OAAf,4BACA,uBACEnD,KAAK,OACLoD,GAAG,OACHzD,MAAOuC,EACPmB,SAAUhB,EACViB,OAAQhB,IAETF,GAAiB,mBAAGc,UAAU,aAAb,wCAEpB,qBAAKA,UAAU,eAAf,SACE,wBAAQK,UAAWf,EAAnB,0BCpGOgB,MARf,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,cAAC,EAAD,OCANO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.e86d9a77.chunk.js","sourcesContent":["import { useReducer } from 'react';\r\n\r\nconst initialInputState = {\r\n  value: '',\r\n  isTouched: false,\r\n};\r\n\r\nconst inputStateReducer = (prevState, action) => {\r\n  if (action.type === 'INPUT') {\r\n    return { value: action.value, isTouched: prevState.isTouched };\r\n  }\r\n  if (action.type === 'BLUR') {\r\n    return { isTouched: true, value: prevState.value };\r\n  }\r\n  if (action.type === 'RESET') {\r\n    return { isTouched: false, value: '' };\r\n  }\r\n  return initialInputState;\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n  const [inputState, dispatch] = useReducer(\r\n    inputStateReducer,\r\n    initialInputState\r\n  );\r\n\r\n  const valueIsValid = validateValue(inputState.value);\r\n  const hasError = !valueIsValid && inputState.isTouched;\r\n\r\n  const valueChangeHandler = ({ target }) =>\r\n    dispatch({ type: 'INPUT', value: target.value });\r\n\r\n  const inputBlurHandler = () => dispatch({ type: 'BLUR' });\r\n\r\n  const reset = () => dispatch({ type: 'RESET' });\r\n\r\n  return {\r\n    value: inputState.value,\r\n    isValid: valueIsValid,\r\n    hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n","import useInput from '../hooks/use-input';\n\nconst isBlank = (value) => value.trim() !== '';\n\nconst validateEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nconst BasicForm = (props) => {\n  const {\n    value: firstNameValue,\n    isValid: isFirstNameValid,\n    hasError: hasFirstNameError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isBlank);\n\n  const {\n    value: lastNameValue,\n    isValid: isLastNameValid,\n    hasError: hasLastNameError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isBlank);\n\n  const {\n    value: emailValue,\n    isValid: isEmailValid,\n    hasError: hasEmailError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(validateEmail);\n\n  const isFormValid =\n    isFirstNameValid && isLastNameValid && isEmailValid ? true : false;\n\n  const resetFields = () => {\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    if (!isFormValid) {\n      return;\n    }\n\n    console.log({ firstNameValue, lastNameValue, emailValue });\n\n    resetFields();\n  };\n\n  const formControlClasses = (hasError) =>\n    hasError ? 'form-control invalid' : 'form-control';\n\n  const firstNameClasses = formControlClasses(hasFirstNameError);\n\n  const lastNameClasses = formControlClasses(hasLastNameError);\n\n  const emailClasses = formControlClasses(hasEmailError);\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"control-group\">\n        <div className={firstNameClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={firstNameValue}\n            onChange={firstNameChangeHandler}\n            onBlur={firstNameBlurHandler}\n          />\n          {hasFirstNameError && (\n            <p className=\"error-text\">First Name is mandatory.</p>\n          )}\n        </div>\n        <div className={lastNameClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            value={lastNameValue}\n            onChange={lastNameChangeHandler}\n            onBlur={lastNameBlurHandler}\n          />\n          {hasLastNameError && (\n            <p className=\"error-text\">Last Name is mandatory.</p>\n          )}\n        </div>\n      </div>\n      <div className={emailClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          value={emailValue}\n          onChange={emailChangeHandler}\n          onBlur={emailBlurHandler}\n        />\n        {hasEmailError && <p className=\"error-text\">Email should be valid. </p>}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!isFormValid}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import BasicForm from './components/BasicForm';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BasicForm />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}